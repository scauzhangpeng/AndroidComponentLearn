apply plugin: 'com.android.application'

static def releaseTime() {
    return new Date().format("yyyyMMdd_HHmmss");
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.wlteck.anLearn"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        buildConfigField "String", "releaseTime", "\"" + releaseTime() + "\""

        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }
    buildTypes {
        release {
            //manifestPlaceholders = [app_icon: "@mipmap/ic_launcher"]
            //是否zip对齐
            zipAlignEnabled true
            // 缩减resource文件
            shrinkResources true
            //Proguard
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            //给applicationId添加后缀“.debug”
            applicationIdSuffix ".debug"
            //manifestPlaceholders = [app_icon: "@mipmap/ic_launcher"]
            zipAlignEnabled false
            shrinkResources false
            minifyEnabled false
            debuggable true
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.supportAppcompatVersion

    if (isModuleDev.toBoolean()) {
        compile project(':CommonComponent')
    } else {
        compile project(':MainComponent')
        compile project(':ModuleNews')
    }
}
